"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π MCP —Å–µ—Ä–≤–µ—Ä –Ω–∞ FastMCP
"""
from fastmcp import FastMCP

# –°–æ–∑–¥–∞—ë–º MCP —Å–µ—Ä–≤–µ—Ä
mcp = FastMCP("Demo Server üöÄ")

@mcp.tool()
def add(a: int, b: int) -> int:
    """–°–∫–ª–∞–¥—ã–≤–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞"""
    return a + b

@mcp.tool()
def multiply(a: int, b: int) -> int:
    """–£–º–Ω–æ–∂–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞"""
    return a * b

@mcp.tool()
def greet(name: str) -> str:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏"""
    return f"–ü—Ä–∏–≤–µ—Ç, {name}! üëã"

@mcp.resource("config://settings")
def get_settings() -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
    return """
    {
        "server_name": "Demo Server",
        "version": "1.0.0",
        "features": ["tools", "resources", "prompts"]
    }
    """

@mcp.prompt()
def code_review_prompt(code: str, language: str = "python") -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ä–µ–≤—å—é –∫–æ–¥–∞"""
    return f"""
    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ–¥–∏ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∫–æ–¥-—Ä–µ–≤—å—é —Å–ª–µ–¥—É—é—â–µ–≥–æ {language} –∫–æ–¥–∞:
    
    ```{language}
    {code}
    ```
    
    –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞:
    - –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
    - –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±–∞–≥–∏
    - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    - –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ best practices
    """

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    mcp.run()
